# name: cicd-wisecow
# on:
#   push:
#     branches:
#       - main        # Trigger only when pushing to main

# env:
#   IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/wisecow

# permissions:
#   contents: read
#   packages: write   # permissions required to push to GHCR
#   id-token: write

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     outputs:
#       image-tag: ${{ steps.set_tag.outputs.tag }}
#     steps:
#       - name: Checkout source
#         uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Log in to GitHub Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GH_TOKEN }}

#       - name: Set image tag
#         id: set_tag
#         run: echo "tag=sha-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           file: ./Dockerfile
#           push: true
#           tags: |
#             ${{ env.IMAGE_NAME }}:${{ steps.set_tag.outputs.tag }}
#             ${{ env.IMAGE_NAME }}:latest
#           cache-from: type=gha
#           cache-to: type=gha,mode=max

#   deploy:
#     needs: build-and-push
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Set up kubectl
#         uses: azure/setup-kubectl@v3
#         with:
#           version: 'v1.34.0'
#       - name: Configure Kubeconfig #testing
#         run: |
#           kubectl apply -f k8s/kubeconfig.yaml 

#       - name: Deploy to Kubernetes
#         run: |
#           kubectl set image deploy/wisecow wisecow=${{ env.IMAGE_NAME }}:latest --record
#           kubectl rollout status deploy/wisecow


name: CI/CD Pipeline for Kind

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest   

    permissions:
      contents: read
      packages: write

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup kind cluster
      - name: Setup kind cluster
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: kind
          version: v0.30.0
          config: ./kind-config.yaml

      # Log in to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      # Build & Push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/wisecow:v1

      # Install cert-manager
      - name: Setup cert-manager
        run: |
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.4/cert-manager.yaml
          kubectl wait --for=condition=Available --timeout=300s deployment -n cert-manager --all
      
      # Nginx Installation
      - name: Install ingress-nginx without admission webhook
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm install ingress-nginx ingress-nginx/ingress-nginx \
            --namespace ingress-nginx --create-namespace \
            --set controller.admissionWebhooks.enabled=false

      # TLS secret
      - name: Create TLS secret
        run: |
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
          -out tls.crt -keyout tls.key \
          -subj "/CN=wisecow.127.0.0.1.nip.io/O=wisecow"

          kubectl create secret tls wisecow-tls \
          --cert=tls.crt --key=tls.key -n wisecow

      # Load image into kind
      - name: Load image into kind
        run: |
          
          kind load docker-image ghcr.io/${{ github.repository_owner }}/wisecow:v1 --name kind

      # Create namespace
      - name: Create namespace
        run: kubectl create namespace wisecow || true

      # Deploy manifests
      - name: Deploy manifests
        run: |
          kubectl apply -f k8s/
          curl -k https://wisecow.127.0.0.1.nip.io 